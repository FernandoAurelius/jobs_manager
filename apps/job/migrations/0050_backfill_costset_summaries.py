# Generated by Django 5.2 on 2025-10-17 02:39

from django.db import migrations


def backfill_empty_summaries(apps, schema_editor):
    """
    Backfill CostSet summaries that are empty ({}) with proper zero values.

    This happens when CostSets are created but have no cost lines yet.
    The summary should always contain {"cost": 0.0, "rev": 0.0, "hours": 0.0}
    to avoid serialization errors in the API.
    """
    CostSet = apps.get_model("job", "CostSet")

    # Find all CostSets with empty summaries
    empty_summary_costsets = CostSet.objects.filter(summary={})
    count = empty_summary_costsets.count()

    if count > 0:
        print(f"Backfilling {count} CostSets with empty summaries...")

        # Update all empty summaries with proper zero values
        empty_summary_costsets.update(summary={"cost": 0.0, "rev": 0.0, "hours": 0.0})

        print(f"Successfully backfilled {count} CostSet summaries")
    else:
        print("No CostSets with empty summaries found")


def reverse_backfill(apps, schema_editor):
    """
    Reverse operation - restore empty dicts for CostSets with zero summaries.

    This is mainly for testing purposes and shouldn't be used in production.
    """
    CostSet = apps.get_model("job", "CostSet")

    zero_summary = {"cost": 0.0, "rev": 0.0, "hours": 0.0}
    zero_summary_costsets = CostSet.objects.filter(summary=zero_summary)
    count = zero_summary_costsets.count()

    if count > 0:
        print(f"Reversing {count} CostSet summaries to empty dicts...")
        zero_summary_costsets.update(summary={})
        print(f"Successfully reversed {count} CostSet summaries")


class Migration(migrations.Migration):
    dependencies = [
        ("job", "0049_make_accounting_date_not_null"),
    ]

    operations = [
        migrations.RunPython(backfill_empty_summaries, reverse_backfill),
    ]
