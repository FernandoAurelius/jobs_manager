# This file is autogenerated by update_init.py script

from .apps import QuotingConfig
from .utils import calculate_product_mapping_hash, calculate_supplier_product_hash

# Conditional imports (only when Django is ready)
try:
    from django.apps import apps
    if apps.ready:
        from .mcp import SupplierProductQueryTool, QuotingTool
        from .models import (
            SupplierProduct,
            SupplierPriceList,
            ScrapeJob,
            ProductParsingMapping,
        )
        from .scheduler_jobs import run_all_scrapers_job, delete_old_job_executions
        from .serializers_django_jobs import DjangoJobSerializer, DjangoJobExecutionSerializer
        from .signals import auto_parse_stock_item
        from .tests_mcp import QuotingToolTests, SupplierProductQueryToolTests
        from .views import (
            UploadSupplierPricingView,
            UploadPriceListView,
            index,
            extract_supplier_price_list_data_view,
            search_stock_api,
            search_supplier_prices_api,
            job_context_api,
        )
        from .views_django_jobs import DjangoJobViewSet, DjangoJobExecutionViewSet
except (ImportError, RuntimeError):
    # Django not ready or circular import, skip conditional imports
    pass

__all__ = [
    "DjangoJobExecutionSerializer",
    "DjangoJobExecutionViewSet",
    "DjangoJobSerializer",
    "DjangoJobViewSet",
    "ProductParsingMapping",
    "QuotingConfig",
    "QuotingTool",
    "QuotingToolTests",
    "ScrapeJob",
    "SupplierPriceList",
    "SupplierProduct",
    "SupplierProductQueryTool",
    "SupplierProductQueryToolTests",
    "UploadPriceListView",
    "UploadSupplierPricingView",
    "auto_parse_stock_item",
    "calculate_product_mapping_hash",
    "calculate_supplier_product_hash",
    "delete_old_job_executions",
    "extract_supplier_price_list_data_view",
    "index",
    "job_context_api",
    "run_all_scrapers_job",
    "search_stock_api",
    "search_supplier_prices_api",
]
